name: db-migrate

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Git ref to migrate (default: main)"
        required: false
        default: "main"
  pull_request:
    types: [opened, synchronize, reopened, labeled]

permissions:
  contents: read

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      migrations: ${{ steps.paths.outputs.migrations }}     # <- matches step id "paths" below
    steps:
      - uses: actions/checkout@v4

      - name: Detect migration changes
        id: paths
        uses: dorny/paths-filter@v3
        with:
          filters: |
            migrations:
              - 'supabase/migrations/**'

  migrate:
    needs: changes
    if: >
      github.event_name == 'workflow_dispatch' ||
      (needs.changes.outputs.migrations == 'true' &&
       contains(github.event.pull_request.labels.*.name, 'apply-migrations'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # SAFE fallback: only read inputs on workflow_dispatch
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.ref || github.ref }}

      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Supabase login
        run: supabase login --token "${{ secrets.SUPABASE_ACCESS_TOKEN }}"

      - name: Link project
        working-directory: ./supabase
        run: supabase link --project-ref "${{ secrets.SUPABASE_PROJECT_REF }}"

      - name: Push migrations (online)
        working-directory: ./supabase
        env:
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: supabase db push --password "$SUPABASE_DB_PASSWORD"
